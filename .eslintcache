[{"C:\\sozo-copy\\sozo\\src\\index.js":"1","C:\\sozo-copy\\sozo\\src\\App.js":"2","C:\\sozo-copy\\sozo\\src\\drawing_panel.js":"3","C:\\sozo-copy\\sozo\\src\\Shapes\\canvas.js":"4"},{"size":595,"mtime":1611124749593,"results":"5","hashOfConfig":"6"},{"size":510,"mtime":1611308544676,"results":"7","hashOfConfig":"6"},{"size":14842,"mtime":1612178986228,"results":"8","hashOfConfig":"6"},{"size":3259,"mtime":1611573477332,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"114km",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\sozo-copy\\sozo\\src\\index.js",[],["20","21"],"C:\\sozo-copy\\sozo\\src\\App.js",[],"C:\\sozo-copy\\sozo\\src\\drawing_panel.js",["22","23","24","25","26","27","28","29","30","31","32","33","34","35"],"C:\\sozo-copy\\sozo\\src\\Shapes\\canvas.js",["36"],"import React, { useState } from 'react';\r\nimport { Stage, Layer, Rect,Line,Circle,RegularPolygon,Star, Transformer } from 'react-konva';\r\n\r\nconst Canvas = (props) => {\r\n  const [backgroundrect,setBackgroundRect] = useState(null)\r\n  const handleRectClick = (e) => {\r\n    setBackgroundRect(props.colorSet);\r\n  };\r\n  const [backgroundcircle,setBackgroundCircle] = useState(null)\r\n  const handleCircleClick = (e) => {\r\n    setBackgroundCircle(props.colorSet);\r\n  }\r\n  const [backgrounddiamd,setBackgroundDiamd] = useState(null)\r\n  const handleDiamdClick = (e) => {\r\n    setBackgroundDiamd(props.colorSet);\r\n  }\r\n  const [backgroundtri,setBackgroundTri] = useState(null)\r\n  const handleTriClick = (e) => {\r\n    setBackgroundTri(props.colorSet);\r\n  }\r\n  const [backgroundstar,setBackgroundStar] = useState(null)\r\n  const handleStarClick = (e) => {\r\n    setBackgroundStar(props.colorSet);\r\n  }\r\n  const [backgroundsq,setBackgroundSq] = useState(null)\r\n  const handleSqClick = (e) => {\r\n    setBackgroundSq(props.colorSet);\r\n  }\r\n  const [backgroundpoly,setBackgroundPoly] = useState(null)\r\n  const handlePolyClick = (e) => {\r\n    setBackgroundPoly(props.colorSet);\r\n  }\r\n  \r\n\r\n  return (\r\n    <Stage width={1230} height={700}>\r\n      <Layer>\r\n        {props.rect && <Rect\r\n          x={20}\r\n          y={50}\r\n          width={200}\r\n          height={100}\r\n          fill={backgroundrect}\r\n          stroke=\"black\"\r\n          draggable=\"true\"\r\n          onClick={handleRectClick}\r\n          // id=\"rectangle\"\r\n        />}\r\n      {props.circle && <Circle x={200} y={100} radius={50} stroke=\"black\" draggable=\"true\" \r\n      fill={backgroundcircle}\r\n      onClick={handleCircleClick}\r\n      />}\r\n       { props.diamond &&<Line\r\n           x={200}\r\n           y={200}\r\n           points={[75,0,150,100,75,200,0,100]}\r\n           stroke=\"black\"\r\n           strokeWidth={2}\r\n           fill={backgrounddiamd}\r\n           closed=\"true\"\r\n           draggable=\"true\"\r\n           onClick={handleDiamdClick}\r\n          />}\r\n           {props.triangle && <Line\r\n            x={300}\r\n            y={300}\r\n            points={[0,0,200,0,100,-150]}\r\n            stroke=\"black\"\r\n            strokeWidth={2}\r\n            fill={backgroundtri}\r\n            closed=\"true\"\r\n            draggable=\"true\"\r\n            onClick={handleTriClick}\r\n          />}\r\n          { props.stars && <Star\r\n            x={400}\r\n            y={400}\r\n            numPoints={5}\r\n            innerRadius={20}\r\n            outerRadius={40}\r\n            stroke=\"black\"\r\n            fill={backgroundstar}\r\n            opacity={0.8}\r\n            draggable=\"true\"\r\n            onClick={handleStarClick}\r\n          />}\r\n          {props.square && <Rect\r\n          x={200}\r\n          y={100}\r\n          width={100}\r\n          height={100}\r\n          fill={backgroundsq}\r\n          draggable=\"true\"\r\n          onClick={handleSqClick}\r\n        />}\r\n       {props.hexagon && <RegularPolygon\r\n           x={100}\r\n           y={200}\r\n           sides= {6}\r\n           radius={70}\r\n           stroke=\"black\"\r\n           fill={backgroundpoly}\r\n           strokeWidth={2}\r\n           draggable=\"true\"\r\n           onClick={handlePolyClick}\r\n          />}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n};\r\nexport default Canvas;\r\n\r\n\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":72,"column":9,"nodeType":"43","endLine":72,"endColumn":38},{"ruleId":"41","severity":1,"message":"42","line":170,"column":17,"nodeType":"43","endLine":170,"endColumn":39},{"ruleId":"44","severity":1,"message":"45","line":205,"column":19,"nodeType":"43","endLine":205,"endColumn":30},{"ruleId":"41","severity":1,"message":"42","line":222,"column":67,"nodeType":"43","endLine":222,"endColumn":123},{"ruleId":"41","severity":1,"message":"42","line":223,"column":67,"nodeType":"43","endLine":223,"endColumn":124},{"ruleId":"41","severity":1,"message":"42","line":224,"column":67,"nodeType":"43","endLine":224,"endColumn":127},{"ruleId":"41","severity":1,"message":"42","line":225,"column":67,"nodeType":"43","endLine":225,"endColumn":130},{"ruleId":"41","severity":1,"message":"42","line":226,"column":67,"nodeType":"43","endLine":226,"endColumn":118},{"ruleId":"41","severity":1,"message":"42","line":227,"column":67,"nodeType":"43","endLine":227,"endColumn":124},{"ruleId":"41","severity":1,"message":"42","line":228,"column":67,"nodeType":"43","endLine":228,"endColumn":127},{"ruleId":"41","severity":1,"message":"42","line":251,"column":73,"nodeType":"43","endLine":251,"endColumn":94},{"ruleId":"41","severity":1,"message":"42","line":252,"column":71,"nodeType":"43","endLine":252,"endColumn":92},{"ruleId":"41","severity":1,"message":"42","line":253,"column":71,"nodeType":"43","endLine":253,"endColumn":92},{"ruleId":"41","severity":1,"message":"42","line":257,"column":21,"nodeType":"43","endLine":257,"endColumn":43},{"ruleId":"46","severity":1,"message":"47","line":2,"column":62,"nodeType":"48","messageId":"49","endLine":2,"endColumn":73},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Transformer' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]